package eg.edu.alexu.csd.datastructure.mailServer.cs01_cs30_cs35;

import eg.edu.alexu.csd.datastructure.linkedList.ILinkedList;
import eg.edu.alexu.csd.datastructure.mailServer.IApp;
import eg.edu.alexu.csd.datastructure.mailServer.IContact;
import eg.edu.alexu.csd.datastructure.mailServer.IFilter;
import eg.edu.alexu.csd.datastructure.mailServer.IFolder;
import eg.edu.alexu.csd.datastructure.mailServer.IMail;
import eg.edu.alexu.csd.datastructure.mailServer.ISort;
/**
 * @author Abanoub Ashraf
 * @author Amr
 * @author kiro
 */
public class MyApp implements IApp {

	/**
	 * Sign in to the application.
	 * 
	 * @param email
	 * @param password
	 * @return false if the email name not exist
	 */
	@Override
	public boolean signin(final String email, final String password) {
		// TODO Auto-generated method stub
		
		return false;
	}

	/**
	 * Create new account.
	 * 
	 * @param contact
	 * @return false if the email name already exist
	 */
	@Override
	public boolean signup(final IContact contact) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * This function should be called 
	 * before reading from the index file and
	 * apply the sort and search parameters.
	 * 
	 * @param folder currently shown, can be null.
	 * @param filter to apply search, can be null.
	 * @param sort to apply sort.
	 */
	@Override
	public void setViewingOptions(final IFolder
		folder, final IFilter filter, final ISort sort) {
		// TODO Auto-generated method stub
		
	}

	/**
	 * You should use setViewingOptions function first.
	 * 
	 * @param page to handle paging.
	 * @return list of emails.
	 */
	@Override
	public IMail[] listEmails(final int page) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * You should use setViewingOptions function first.
	 * 
	 * @param mails to be moved to trash.
	 */
	@Override
	public void deleteEmails(final ILinkedList mails) {
		// TODO Auto-generated method stub
		
	}

	/**
	 * You should use setViewingOptions function first.
	 * 
	 * @param mails to be moved.
	 * @param des the destination folder.
	 */
	@Override
	public void moveEmails(final ILinkedList mails, final IFolder des) {
		// TODO Auto-generated method stub		
	}

	/**
	 * Send a new email.
	 * 
	 * @param email should contain all
	 *  the information needed sender, list of.
	 *  receivers, list of attachments, email body, ...
	 * @return false if something wrong happened
	 *  like sending to non-existing user.
	 */
	@Override
	public boolean compose(final IMail email) {
		// TODO Auto-generated method stub
		return false;
	}

}
